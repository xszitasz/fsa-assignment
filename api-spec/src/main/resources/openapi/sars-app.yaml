openapi: 3.0.0
info:
  title: PosAm Assignment
  description: API for managing animals, reservations, and users
  version: 1.0.0

paths:
  /animals:
    get:
      summary: Get an animal by ID or name
      operationId: getAnimal
      parameters:
        - name: id
          in: query
          description: ID of the animal to retrieve
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of the animal to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Animal found
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Animal'
        '404':
          description: Animal not found
    post:
      summary: Create a new animal
      operationId: createAnimal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Animal'
      responses:
        '201':
          description: Animal created successfully
  /reservations:
    get:
      summary: Get a reservation by ID
      operationId: getReservationById
      parameters:
        - name: id
          in: query
          description: ID of the reservation to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Reservation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '404':
          description: Reservation not found
    post:
      summary: Create a new reservation
      operationId: createReservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /users:
    get:
      summary: Get a user by ID
      operationId: getUserById
      parameters:
        - name: id
          in: query
          description: ID of the user to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    Animal:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        race:
          $ref: '#/components/schemas/Race'
      required:
        - name
    Race:
      type: string
      enum:
        - LABRADOR
        - SHEPHERD
        - RETRIEVER
        - BULLDOG
        - BEAGLE
        - POODLE
        - ROTTWEILER
        - YORKSHIRE
        - SIAMESE
        - MAINE
        - RAGDOLL
        - BENGAL
        - SPHYNX
        - BRITISH
        - SCOTTISH
        - ABYSSINIAN
        - PERSIAN
    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        created:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ReservationStatus'
        user:
          $ref: '#/components/schemas/User'
        animal:
          $ref: '#/components/schemas/Animal'
    ReservationStatus:
      type: string
      enum:
        - APPROVED
        - REJECTED
        - PENDING
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        created:
          type: string
          format: date-time
        name:
          type: string
        userName:
          type: string
        email:
          type: string
        credit:
          $ref: '#/components/schemas/Credit'
        role:
          $ref: '#/components/schemas/UserRole'
      required:
        - name
    UserRole:
      type: string
      enum:
        - ADMIN
        - DOGWALKER
    Credit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        count:
          type: integer